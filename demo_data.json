[
    {
        "pk": 1, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 2, 
            "level": 0, 
            "tree_id": 2, 
            "parent": null, 
            "title": "Accueil", 
            "author": 1, 
            "modified": "2012-03-16 00:55:24", 
            "created": "2012-03-16 00:55:24", 
            "content": ".. _Django: https://www.djangoproject.com/\r\n\r\nIntroduction\r\n============\r\n\r\n**Sveetchies** est \u00e0 l'origine un ensemble de modules Python vari\u00e9s et cette documentation ne porte que \r\nsur sa partie contenant des briques logicielles pour des projets faits avec Django.\r\n\r\nBriques logicielles\r\n===================\r\n\r\n* :page:`autobreadcrumbs`\r\n* :page:`django-codemirror`\r\n* :page:`sveetchies-documents`\r\n* :page:`sveetchies-mailings`\r\n\r\nPr\u00e9-requis\r\n==========\r\n\r\nDes d\u00e9pendances suppl\u00e9mentaires peuvent \u00eatre n\u00e9cessaires pour certaines briques mais \u00e0 la base les \r\n\u00e9l\u00e9ments suivants sont toujours requis :\r\n\r\n* Python >= 2.6;\r\n* `Django`_ >= 1.3.x;\r\n\r\nT\u00e9l\u00e9chargement\r\n==============\r\n\r\nLa derni\u00e8re version \u00e0 jour de **Sveetchies** est disponible sur son d\u00e9p\u00f4t SVN : ::\r\n\r\n  svn checkout http://svn.logicielslibres.info/bordel/sveetch/Sveetchies/\r\n\r\nUn tarball de la derni\u00e8re release est aussi disponible sur `<http://sveetchies.sveetch.net/tarballs/>`_.", 
            "visible": true, 
            "template": "fixed_absolute", 
            "published": "2012-01-09 21:07:51", 
            "lft": 1, 
            "order": 1, 
            "slug": "accueil"
        }
    }, 
    {
        "pk": 32, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 10, 
            "level": 0, 
            "tree_id": 4, 
            "parent": null, 
            "title": "Sveetchies-documents", 
            "author": 1, 
            "modified": "2012-03-16 00:56:06", 
            "created": "2012-03-16 00:56:06", 
            "content": "Introduction\r\n============\r\n\r\n**Sveetchies-documents** est une brique logicielle de gestions de documents textes pour \r\nDjango.\r\n\r\nSon principe de base repose en partie sur celui d'un Wiki mais sans syst\u00e8me de r\u00e9visions \r\nni d'utilisation collaborative. C'est en fait une \u00e9volution de \r\n`Kiwi <http://kiwi.sveetch.net/>`_, simplifi\u00e9e pour tenir dans sa propre brique int\u00e9grable \r\nais\u00e9ment dans un projet existant et utilisant exclusivement le parser **ReStructuredText** \r\nde docutils.\r\n\r\nFonctionnalit\u00e9s\r\n===============\r\n\r\n* Utilisation du parser `ReStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_;\r\n* \u00c9diteur de texte enrichi avec :page:`django-codemirror`;\r\n* Interface de gestion pr\u00eate \u00e0 l'emploi;\r\n* Formulaires ergonomiques gr\u00e2ce \u00e0 **django-uni-form**;\r\n* Gestion de deux types de documents :\r\n\r\n  * Page : Des pages HTML compl\u00e8tes dans une arborescence avec possibilit\u00e9 de \r\n    publication programm\u00e9e;\r\n  * Document \u00e0 ins\u00e9rer : Des documents n'apparaissant dans aucune arborescence et qui \r\n    peuvent \u00eatre int\u00e9gr\u00e9s \u00e0 d'autres pages de n'importe quelle autre application de \r\n    vos projets;\r\n\r\n* Utilisation du syst\u00e8me de cache de Django pour la g\u00e9n\u00e9ration du rendu HTML des \r\n  documents par le parser ReST;\r\n* Chemin d'acc\u00e8s (ou *pathline* ou *breadcrumbs*) toujours disponible gr\u00e2ce \u00e0 \r\n  :page:`autobreadcrumbs` pour la gestion du chemin d'acc\u00e8s (pathline/breadcrumbs);\r\n* Multiples *Template tags* pour utiliser les documents dans vos projets;\r\n* Avertissement des probl\u00e8mes de syntaxe d\u00e9tect\u00e9s par le parser lors de la soumission du \r\n  formulaire d'un document, pour emp\u00eacher de publier tout document avec une erreur de \r\n  syntax;\r\n\r\nPr\u00e9-requis\r\n==========\r\n\r\n* Python >= 2.6;\r\n* `Django <https://www.djangoproject.com/>`_ >= 1.3.x;\r\n* `docutils <http://docutils.sourceforge.net/>`_ >= 0.7;\r\n* `django-uni-form <http://pypi.python.org/pypi/django-uni-form/0.9.0>`_ >= 0.9.x;\r\n* `django-mptt <http://pypi.python.org/pypi/django-mptt/>`_ >= 0.5.2;\r\n* `Pygments <http://pygments.org/>`_ >= 1.2.x (optionnel);\r\n\r\nT\u00e9l\u00e9chargement\r\n==============\r\n\r\n**Sveetchies-documents** est inclus dans **Sveetchies** dont la derni\u00e8re version en date \r\nest disponible sur son d\u00e9p\u00f4t SVN : ::\r\n\r\n  svn checkout http://svn.logicielslibres.info/bordel/sveetch/Sveetchies/\r\n\r\nUn tarball de la derni\u00e8re release est aussi disponible sur `<http://sveetchies.sveetch.net/tarballs/>`_.", 
            "visible": true, 
            "template": "elastic_with_columns", 
            "published": "2012-03-01 23:43:56", 
            "lft": 1, 
            "order": 10, 
            "slug": "sveetchies-documents"
        }
    }, 
    {
        "pk": 6, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 3, 
            "level": 1, 
            "tree_id": 4, 
            "parent": 32, 
            "title": "Installation", 
            "author": 1, 
            "modified": "2012-03-16 00:14:42", 
            "created": "2012-03-16 00:14:42", 
            "content": ".. _ReStructuredText: http://docutils.sourceforge.net/rst.html\n\nInt\u00e9gration dans votre projet\n=============================\n\n**Sveetchies-documents** est une simple brique logicielle \u00e0 int\u00e9grer dans un projet ou \nplateforme web sous Django, en lui-m\u00eame il ne permet pas de produire directement un site.\n\nApr\u00e8s avoir install\u00e9 tout les pr\u00e9-requis, il vous faut l'int\u00e9grer \u00e0 votre projet sous \nDjango.\n\nModification de vos Settings\n****************************\n\nINSTALLED_APPS\n--------------\n\nD'abord pour inscrire l'application \u00e0 votre projet, modifiez ``INSTALLED_APPS`` en y \nrajoutant les lignes suivantes :\n\n..  sourcecode:: python\n    :linenos:\n    :hl_lines: 3,4,5\n\n    INSTALLED_APPS = (\n        ...\n        'Sveetchies.django.autobreadcrumbs',\n        'Sveetchies.django.djangocodemirror',\n        'Sveetchies.django.documents',\n        ...\n    )\n\nTEMPLATE_CONTEXT_PROCESSORS\n---------------------------\n\nPuis ajouter les deux lignes suivantes \u00e0 ``TEMPLATE_CONTEXT_PROCESSORS`` :\n\n..  sourcecode:: python\n    :linenos:\n    :hl_lines: 3,4\n\n    TEMPLATE_CONTEXT_PROCESSORS = (\n        ...\n        'Sveetchies.django.context_processors.site_urls',\n        'Sveetchies.django.autobreadcrumbs.context_processors.AutoBreadcrumbsContext',\n        ...\n    )\n\nAUTOBREADCRUMBS_TITLES\n----------------------\n\nVous pouvez ne pas utiliser ``autobreadcrumbs`` mais il vous faudra modifier les templates \npour en retirer la mention de ses *template tags*. Si par contre vous l'utilisez, il vous \nfaudra aussi ajouter dans les ``settings`` la partie configurant les titres des chemins :\n\n..  sourcecode:: python\n    :linenos:\n\n    AUTOBREADCRUMBS_TITLES = {\n        'documents-index': u'Plan du site',\n        'documents-board': u'Administration des documents',\n        'documents-insert-add': u'Nouveau document \u00e0 ins\u00e9rer',\n        'documents-insert-delete': u'Supprimer le document #{{ insert_instance.slug }}',\n        'documents-insert-edit': u'Editer le document #{{ insert_instance.slug }}',\n        'documents-page-add': u'Nouvelle page',\n        'documents-page-delete': u'Supprimer la page #{{ page_instance.slug }}',\n        'documents-page-edit': u'Editer la page #{{ page_instance.slug }}',\n    }\n\nVous pouvez y modifier les titres si besoin, notez que les titres utilisent le syst\u00e8me de \nvariables et tags de Django. Si vous avec d\u00e9j\u00e0 un ``settings.AUTOBREADCRUMBS_TITLES`` rempli, \nmixez simplement le code pr\u00e9c\u00e9dant avec le votre.\n\nTEMPLATE_DIRS\n-------------\n\nVous devez enregistrer l'emplacement des templates de *Sveetchies-documents* dans vos settings :\n\n..  sourcecode:: python\n    :linenos:\n\n    TEMPLATE_DIRS = (\n        ...\n        '/home/foo/Sveetchies/src/django/documents/templates/documents/',\n        ...\n    )\n\nLe chemin est \u00e0 modifier selon l'emplacement de votre installation de **Sveetchies**.\n\nSTATICFILES_DIRS\n----------------\n\nVous devez enregistrer l'emplacement des fichiers statiques de *Sveetchies-documents* dans vos settings :\n\n..  sourcecode:: python\n    :linenos:\n  \n    STATICFILES_DIRS = (\n        ...\n        '/home/foo/Sveetchies/src/django/documents/static/',\n        ...\n    )\n\nLe chemin est \u00e0 modifier selon l'emplacement de votre installation de **Sveetchies**.\n\nAutres\n------\n\nEnsuite si besoin, il existe quelques options de fonctionnement que vous pouvez modifier \ndepuis les settings, pour cela consulter le fichier ``documents/__init__.py`` o\u00f9 chaque option \nest r\u00e9sum\u00e9e. Ne modifiez rien dans ce fichier, pour *\u00e9craser* ces options remplissez les \nsimplements dans vos settings.\n\nUrls\n****\n\nIl faut ensuite ins\u00e9rer la *map* des urls dans votre projet, la pratique la plus simple est \nd'utiliser celle d\u00e9j\u00e0 int\u00e9gr\u00e9e \u00e0 *Sveetchies-documents* dans le fichier ``urls.py`` \u00e0 la racine de votre \nprojet de la mani\u00e8re suivante :\n\n..  sourcecode:: python\n    :linenos:\n    :hl_lines: 3\n\n    urlpatterns = patterns('',\n        ...\n        (r'^documents/', include('Sveetchies.django.documents.urls')),\n        ...\n    )\n\nVous pouver utiliser un autre chemin que ``documents/`` si besoin. Pour des besoins plus sp\u00e9cifiques vous\npouvez red\u00e9finir la *map* des pages et garder celles de l'interface de gestion des documents (voir la \npage :page:`utilisation`).\n\nSynchronisation des donn\u00e9es de la brique logicielle\n***************************************************\n\n\u00c0 ce stade la brique est install\u00e9e et pr\u00eate \u00e0 l'emploi dans votre projet, il ne reste qu'\u00e0 utiliser \nla commande de synchronisation pour ajouter ses mod\u00e8les en base donn\u00e9es : ::\n\n    django-admin syncdb\n\nD\u00e9monstration\n=============\n\n**Sveetchies** contient une d\u00e9monstration dans son r\u00e9pertoire ``demo/`` qui repose en partie \n**Sveetchies-documents**.\n\nSettings\n********\n\nEn g\u00e9n\u00e9ral, on \u00e9vite de modifier le fichier de *settings* livr\u00e9 pour \u00e9viter toute perte en cas de mise \n\u00e0 jour. On pr\u00e9f\u00e8re dupliquer le fichier original et le modifier, il suffit ensuite de le sp\u00e9cifier dans \ntoute les commandes de ``django-admin`` en utilisant l'option ``--settings`` par exemple avec un fichier \n``dev_settings.py`` : ::\n\n  django-admin COMMAND --settings=dev_settings\n\nOn peut aussi faire plus simple, il suffit de cr\u00e9er votre fichier, d'y importer les ``settings`` \ndu fichier original et les *\u00e9craser*.\n\nL'exemple suivant montre un fichier de settings pour une utilisation en production, dans un fichier \n``prod_settings.py`` :\n\n..  sourcecode:: python\n    :linenos:\n    :hl_lines: 10,13,14,15,16,17,18,19,20,21,23\n\n    # -*- coding: utf-8 -*-\n    \"\"\"\n    Django settings for Sveetchies demo\n    \n    For production environnment, using the default project settings\n    \"\"\"\n    from settings import *\n    \n    # WEBAPP_ROOT must be manually specified in production\n    WEBAPP_ROOT = \"/home/django/projects/Sveetchies/demo/\"\n    \n    # Database access\n    DATABASES = {\n        'default': {\n            'NAME': 'sveetchies',\n            'ENGINE': 'django.db.backends.postgresql_psycopg2',\n            'USER': 'django',\n            'PASSWORD': 'dj4ng0',\n        }\n    }\n    \n    # Make this unique, and don't share it with anybody.\n    SECRET_KEY = 'long_key'\n    \n    # SMTP Settings to send Applications error, uncomment to active mail sending\n    #EMAIL_HOST = 'localhost'\n    #EMAIL_SUBJECT_PREFIX = '[Sveetchies] '\n    #SERVER_EMAIL = 'Sveetchies errors <your@email>'\n    #DEFAULT_FROM_EMAIL = 'Sveetchies <your@email>'\n    \n    # Emails receiver for errors if SMTP settings are actived\n    #ADMINS = (\n        #('YourName', 'your@email'),\n    #)\n    \n    # Disable all debug mode\n    DEBUG = False\n    TEMPLATE_DEBUG = DEBUG\n    UNIFORM_FAIL_SILENTLY = not DEBUG\n    \n    # Another site ID than default\n    SITE_ID = 1\n    \n    # Adapt for WEBAPP_ROOT and STATIC_DIRNAME changes\n    MEDIA_ROOT = os.path.join(WEBAPP_ROOT, MEDIA_DIRNAME)+\"/\"\n    STATIC_DIRNAME = '_statics'\n    STATIC_URL = '/{0}/'.format(STATIC_DIRNAME)\n    STATIC_ROOT = os.path.join(WEBAPP_ROOT, STATIC_DIRNAME)+\"/\"\n    STATICFILES_DIRS = (\n        os.path.join(WEBAPP_ROOT, 'webapp_statics/'),\n        os.path.join(SVEETCHIES_PATH_INSTALL, 'django/documents/static/'),\n    )\n    ADMIN_MEDIA_PREFIX = os.path.join('/', STATIC_DIRNAME, 'admin/')\n    TEMPLATE_DIRS = (\n        os.path.join(WEBAPP_ROOT, 'templates/'),\n        os.path.join(SVEETCHIES_PATH_INSTALL, 'django/documents/templates/documents/'),\n    )\n    \n    # Disable the DebugToolbar in production\n    MIDDLEWARE_CLASSES = tuple([item for item in list(MIDDLEWARE_CLASSES) if item != 'debug_toolbar.middleware.DebugToolbarMiddleware'])\n    INSTALLED_APPS = tuple([item for item in list(INSTALLED_APPS) if item != 'debug_toolbar'])\n    \nLes lignes mises en surbrillance sont les seules que vous avez \u00e0 modifier, tout le reste n\u00e9cessaire \nest automatiquement mis en place :\n\n* ``WEBAPP_ROOT`` est le chemin absolu vers le r\u00e9pertoire de votre installation de la d\u00e9monstration qui \n  contient au moins le fichier de *settings* et celui des *urls*.\n* ``DATABASES`` contient la configuration d'acc\u00e8s \u00e0 votre base de donn\u00e9es, r\u00e9f\u00e9rez vous \u00e0 la \n  `documentation Django sur settings.DATABASES <https://docs.djangoproject.com/en/dev/ref/settings/#databases>`_ \n  pour un d\u00e9tails des possibilit\u00e9s;\n* ``SECRET_KEY`` est une longue chaine de caract\u00e8res vari\u00e9s qui sert \u00e0 encrypter certaines donn\u00e9es comme \n  les sessions ou les mots de passes utilisateurs prenez exemple de celle fourni dans les settings par \n  d\u00e9faut mais rendez la bien diff\u00e9rente;\n\nOptionnellement, vous pouvez renseigner les options concernant l'envoi SMTP et ``settings.ADMINS`` \npour recevoir des notifications d'erreurs (Http500) par email.\n\nNotez aussi ``SITE_ID`` est \u00e0 la valeur ``1``, par convention on utilise cette valeur pour la \nversion en d\u00e9veloppement. Mais vous pouvez la changer si besoin, mais il vous faut d'abord cr\u00e9er son entr\u00e9e \ncorrespondante depuis l'administration de Django (via le chemin ``Accueil \u203a Sites \u203a Sites \u203a Ajouter site``) \nou modifier l'entr\u00e9e par d\u00e9faut cr\u00e9er lors de la **Synchronisation des donn\u00e9es**.\n\nSynchronisation des donn\u00e9es de la d\u00e9monstration\n***********************************************\n\nVous pouvez l'installer en renseignant correctement les ``settings`` (\u00e0 faire dans un autre fichier, \npar exemple ``prod_settings.py``) puis lancer une synchronisation des donn\u00e9es : ::\n\n  django-admin syncdb --settings=prod_settings\n\nR\u00e9pondez positivement \u00e0 la demande de cr\u00e9ation d'un super utilisateur, puis lorsque le processus s'est achev\u00e9 \ncorrectement il faut charger les donn\u00e9es de la d\u00e9monstration : ::\n\n  django-admin loaddata --settings=prod_settings demo_data.json\n\nD\u00e9ploiement en production\n*************************\n\nSi vous souhaitez utiliser la d\u00e9monstration autrement qu'avec le serveur de d\u00e9veloppement int\u00e9gr\u00e9 de Django, \nvous devrez penser \u00e0 collecter les fichiers statiques (css, images, etc..) avec la commande : ::\n\n  django-admin collectstatic --settings=prod_settings\n\nPour plus d'informations r\u00e9f\u00e9rez vous \u00e0 la \n`documentation Django sur la commande collectstatic <https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#collectstatic>`_.\n\nEnsuite d\u00e9ployez le projet sur le serveur web de votre choix, pour cela r\u00e9f\u00e9rez vous \u00e0 \nla `documentation de Django sur le d\u00e9ploiement <https://docs.djangoproject.com/en/dev/howto/deployment/>`_. \nLa d\u00e9monstration en ligne de ce site utilise FastCGI, probablement le plus simple \u00e0 mettre en place.\n\nProbl\u00e8mes connus\n================\n\nUn bug mineur dans **Django** provoque des erreurs dans certains cas avec le parser `ReStructuredText`_ lorsque vous \navez activ\u00e9 ``django.contrib.admindocs`` dans votre projet \u00e0 cause d'une r\u00e9f\u00e9rence propre \u00e0 **admindocs**.\n\nIl n'y a pour l'instant qu'une seule solution de contournement qui consiste \u00e0 *patcher* le module incrimin\u00e9 de \n**Django**, voyez `l'entr\u00e9e de bug dans Django <https://code.djangoproject.com/ticket/6681>`_ pour plus de d\u00e9tails.\n\nLe patch consiste \u00e0 **commenter** la ligne suivante dans le fichier ``django/contrib/admindocs/utils.py`` :\n\n..  sourcecode:: python\n    :linenos:\n    \n    docutils.parsers.rst.roles.DEFAULT_INTERPRETED_ROLE = 'cmsreference'\n\nNotez que l'activation de ``django.contrib.admindocs`` est propos\u00e9e par d\u00e9faut dans les tutoriaux et outils de Django mais \nrarement utilis\u00e9e. Si c'est votre cas vous pouvez alors solutionner simplement ce probl\u00e8me en d\u00e9sactivant \n``django.contrib.admindocs`` dans vos **settings** et sa r\u00e9f\u00e9rence dans le fichier ``urls.py`` principal de votre projet.", 
            "visible": true, 
            "template": "elastic_with_columns", 
            "published": "2012-02-03 17:39:33", 
            "lft": 2, 
            "order": 20, 
            "slug": "installation"
        }
    }, 
    {
        "pk": 8, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 7, 
            "level": 1, 
            "tree_id": 4, 
            "parent": 32, 
            "title": "Utilisation", 
            "author": 1, 
            "modified": "2012-03-16 00:28:28", 
            "created": "2012-03-16 00:28:28", 
            "content": "Urls\n====\n\nPour des cas plus particuliers par exemple si vous souhaitez utiliser uniquement cette \nbrique \u00e0 la racine de votre site, il vous faudra alors ins\u00e9rer et modifier chaque \ndirectives dans votre ``urls.py`` par exemple :\n\n..  sourcecode:: python\n    :linenos:\n\n    from Sveetchies.django.documents.views.page import HelpPage, PageIndex, PageDetails, PageSource\n    \n    urlpatterns = patterns('',\n        url(r'^$', PageIndex.as_view(), name='documents-index'),\n        \n        (r'^board/', include('Sveetchies.django.documents.urls_board')),\n    \n        url(r'^documents-help/$', HelpPage.as_view(), name='documents-help'),\n        url(r'^sitemap/$', PageIndex.as_view(), name='documents-index'),\n        \n        url(r'^(?P<slug>[-\\w]+)/$', PageDetails.as_view(), name='documents-page-details'),\n        url(r'^(?P<slug>[-\\w]+)/source/$', PageSource.as_view(), name='documents-page-source'),\n        ...\n    )\n\nL'interface d'administration des documents et ses autres pages se trouvent dans ``board/``, mais \nvous pouvez modifier son nom si besoin. Pour des besoins encore plus particuliers, vous pouvez aussi \nint\u00e9grer une version modifi\u00e9e de ``urls_board``.\n\nViews\n=====\n\nLes urls utilisent les vues suivantes, toute celles li\u00e9s \u00e0 l'interface de gestion sont \nen g\u00e9n\u00e9ral prot\u00e9g\u00e9s par des permissions utilisateur.\n\ndocuments-index\n  Le plan du site listant l'arborescence compl\u00e8te des pages visibles.\ndocuments-preview\n  Vue permettant la r\u00e9ception d'une requ\u00eate **POST** pour transmettre le contenu \u00e0 pr\u00e9visualiser \n  avec le parser, c'est une ressource prot\u00e9g\u00e9e n\u00e9cessitant d'\u00eatre identifi\u00e9.\ndocuments-help\n  Page d'aide sur la syntaxe et l'\u00e9diteur, g\u00e9n\u00e9r\u00e9e \u00e0 partir du fichier \n  ``templates/documents/help.rst`` et non pas \u00e0 partir d'une **Page** des documents.\ndocuments-board\n  Interface de gestion des documents, c'est une ressource prot\u00e9g\u00e9e n\u00e9cessitant d'\u00eatre \n  identifi\u00e9.\ndocuments-page-add\n  Formulaire de cr\u00e9ation d'une nouvelle page, ressource prot\u00e9g\u00e9e n\u00e9cessitant d'\u00eatre \n  identifi\u00e9 et avec la permission de cr\u00e9er des pages.\ndocuments-page-edit\n  Formulaire d'\u00e9dition d'une page, ressource prot\u00e9g\u00e9e n\u00e9cessitant d'\u00eatre identifi\u00e9 et \n  avec la permission de modifier des pages.\ndocuments-page-delete\n  Formulaire de suppression d'une page (et \u00e9ventuelles sous-pages), ressource prot\u00e9g\u00e9e \n  n\u00e9cessitant d'\u00eatre identifi\u00e9 et avec la permission de supprimer des pages.\ndocuments-insert-add\n  Formulaire de cr\u00e9ation d'un document ins\u00e9rable, ressource prot\u00e9g\u00e9e n\u00e9cessitant d'\u00eatre \n  identifi\u00e9 et avec la permission de cr\u00e9er des documents ins\u00e9rables.\ndocuments-insert-edit\n  Formulaire d'\u00e9dition d'un document ins\u00e9rable, ressource prot\u00e9g\u00e9e n\u00e9cessitant d'\u00eatre \n  identifi\u00e9 et avec la permission de modifier des documents ins\u00e9rables.\ndocuments-insert-delete\n  Formulaire de suppression d'un document ins\u00e9rable, ressource prot\u00e9g\u00e9e n\u00e9cessitant d'\u00eatre \n  identifi\u00e9 et avec la permission de supprimer des documents ins\u00e9rables.\ndocuments-page-details\n  Vue pour afficher la page avec son contenu.\ndocuments-page-source\n  Vue pour afficher la source *brute* du contenu sans aucun rendu par le parser.\ndocuments-page-quicksave\n  Vue de r\u00e9ception d'une requ\u00eate **POST** pour transmettre le contenu \u00e0 sauvegarder, \n  utilis\u00e9 par la fonction de *sauvegarde rapide* de l'\u00e9diteur sur les **Page**. Ressource \n  prot\u00e9g\u00e9e n\u00e9cessitant les m\u00eames permissions que **documents-page-edit**.\ndocuments-insert-quicksave\n  sqdsd\n\nTemplates\n=========\n\nTout les gabarits se trouvent dans le r\u00e9pertoire ``templates/documents/`` de votre \ninstallation de **Sveetchies-documents**. Pour utiliser vos propres gabarit, il suffit de \nles cr\u00e9er sous le m\u00eame nom dans le r\u00e9pertoire ``templates/documents/`` de votre projet.\n\npage_index.html\n  Plan du site, utilis\u00e9 par la vue ``documents-index``.\nboard.html\n  Index de l'interface de gestion, utilis\u00e9 par la vue ``documents-board``.\npage_form.html\n  Formulaire d'une page, utilis\u00e9 par les vues ``documents-page-add`` \n  et ``documents-page-edit``.\npage_delete.html\n  Formulaire de suppression d'une page, utilis\u00e9 par la vue ``documents-page-delete``.\ninsert_form.html\n  Formulaire d'un document ins\u00e9rable, utilis\u00e9 par les vues ``documents-insert-add`` \n  et ``documents-insert-edit``.\ninsert_delete.html\n  Formulaire de suppression d'un document ins\u00e9rable, utilis\u00e9 par la \n  vue ``documents-page-delete``.\neditor_supercodemirror_includes.html\n  Fragment de code inclus automatiquement dans les formulaires pour utiliser \n  l'\u00e9diteur ``CodeMirror``.\neditor_markitup_includes.html\n  Fragment de code inclus automatiquement dans les formulaires pour utiliser \n  l'\u00e9diteur ``MarkItUp``.\npage_details/default.html\n  Gabarit simple pour afficher une page.  \npage_details/columned_bytwo.html\n  Gabarit pr\u00e9vu pour fonctionner sur deux colonnes, la premi\u00e8re pour le contenu et la \n  seconde pour le sommaire des titres et la navigation des sous-pages.  \npage_treemenu.html\n  Fragment pour g\u00e9n\u00e9rer un menu d'arborescence de pages. Utilis\u00e9 par d\u00e9faut lors \n  de l'usage du template tag ``document_page_treemenu``.\npage_flatmenu.html\n  Fragment pour g\u00e9n\u00e9rer un menu des pages adjacentes. Utilis\u00e9 par d\u00e9faut lors de \n  l'usage du template tag ``document_page_flatmenu``.\n\nTemplates tags et filtres\n=========================\n\nLes diff\u00e9rentes filtres et tags disponibles dans les gabarits d\u00e8s lors qu'ils ont \n\u00e9t\u00e9 import\u00e9s.\n\ndocuments_markup\n****************\n\n\u00c0 importer dans vos templates via la balise ``{% load documents_markup %}``.\n\nsource_render\n  Filtre de rendu par le parser du texte fournit, accepte un argument optionnel pour sp\u00e9cifier \n  un nom cl\u00e9 de configuration de parser \u00e0 utiliser par exemple ``{{ myvar|source_render:\"mysettings\" }}``.\ndocument_render\n  Filtre de rendu du contenu d'une instance de ``Page`` ou ``Insert``, accepte un argument optionnel pour \n  sp\u00e9cifier un nom cl\u00e9 de configuration de parser \u00e0 utiliser par \n  exemple ``{{ page_instance|document_render:\"mysettings\" }}``. \n  Le contenu renvoy\u00e9 est directement celui du parser sans ajout ni utilisation de gabarit.\ndocument_toc\n  Filtre g\u00e9n\u00e9rant le TOC (sommaire) des titres du contenus. Renvoi une arborescence sous forme \n  d'une liste \u00e0 puce si le document contient bien des titres. Accepte les m\u00eames arguments \n  que ``document_render``.\n\ndocuments_utils\n***************\n\n\u00c0 importer dans vos templates via la balise ``{% load documents_utils %}``.\n\npprint_recurse\n  Tag qui renvoi une liste \u00e0 puce r\u00e9cursive de toute les relations d'un objet. C'est un tag \n  tr\u00e8s particulier utilis\u00e9 en interne pour lister les relations d'un objet lors de sa \n  suppression. En th\u00e9orie vous n'avez pas utilit\u00e9 de ce tag.\ndocument_insert\n  Tag pour utiliser un document ins\u00e9rable dans n'importe quel autre template dans votre projet. \n  N\u00e9cessite un argument qui peut \u00eatre soit une chaine de caract\u00e8res contenant le *slug* du \n  document \u00e0 utiliser, soit directement l'instance d'un document ins\u00e9rable. Deux arguments \n  optionnels sont possibles, le premier pour un nom cl\u00e9 de configuration de parser \u00e0 utiliser, \n  le second pour un entier qui sp\u00e9cifie le niveau minimale des titres de premier niveau (\u00e0 3 \n  il n'y aura jamais de ``h1`` ou de ``h2``). Notez que ce dernier argument permet d'\u00e9craser \n  une valeur d\u00e9j\u00e0 d\u00e9finie dans les configurations par d\u00e9faut du parser.\ndocument_page_treemenu\n  Tag pour g\u00e9n\u00e9rer un menu d'arborescence de pages \u00e0 partir d'un point donn\u00e9 (soit une Page, \n  soit la racine de toute les pages), l'arborescence n'inclue pas le point de d\u00e9part (une \n  instance ou la racine). Requiert un argument pour sp\u00e9cifier soit un *slug* d'une page, soit \n  une instance de Page, soit ``0`` pour signifier de commencer \u00e0 partir de la racine de \n  l'arborescence de toute les pages. Accepte un argument optionnel pour sp\u00e9cifier un gabarit \n  sp\u00e9cifique \u00e0 utiliser autre que celui par d\u00e9faut.\ndocument_page_flatmenu\n  Tag pour g\u00e9n\u00e9rer un menu des pages adjacentes d'une page ou de la racine (auquel cas ce ne \n  sont pas les pages adjacentes mais les pages de premier niveau). Accepte les m\u00eames \n  arguments que ``document_page_treemenu``.\ndocument_context\n  Tag g\u00e9n\u00e9rant le rendu, un sommaire des titres automatiques et la navigation sur les sous-pages \n  de la page en cours. Ce tag ne modifie pas ni n'injecte de html dans le template, \u00e0 la place \n  les variables suivantes sont ajout\u00e9s dans le contexte du template :\n  \n  * ``document_toc`` : Fragment HTML d'une liste \u00e0 puces r\u00e9cursive pour l'arborescence des \n    titres de la page;\n  * ``document_navigation`` : Queryset des sous-pages de la page en cours, \u00e0 exploiter avec la \n    m\u00e9thode ``recursetree`` de ``mptt``;\n  * ``document_render`` : Fragment HTML du rendu du contenu par le parser;\n  \n  Les \u00e9l\u00e9ments ``document_toc`` et ``document_render`` b\u00e9n\u00e9ficient du cache.\n\n\u00c9diteurs de texte\n=================\n\n:page:`django-codemirror` est l'\u00e9diteur par d\u00e9faut, il repose sur **CodeMirror** qui a le grand avantage \nde poss\u00e9der une coloration syntaxique de texte.\n\n.. figure:: /static/docs/supercodemirror_editor.png\n   :alt: CodeMirror en mode \u00e9dition\n   :class: left\n   \n   Le mode \u00e9dition avec la coloration syntaxique du contenu en train d'\u00eatre \u00e9dit\u00e9.\n\n.. figure:: /static/docs/supercodemirror_preview.png\n   :alt: CodeMirror en mode \u00e9dition\n   :class: left\n   \n   Le mode pr\u00e9visualisation avec le contenu rendu par le parser.\n\nCache\n=====\n\nLe syst\u00e8me utilise le cache de Django pour mettre en m\u00e9moire certains \u00e9l\u00e9ments de rendus \nli\u00e9s au parser, aucune autre partie n'est mis en cache (transaction base de donn\u00e9es, etc..).\n\nLa gestion du temps de vie de ces caches d\u00e9pends de votre configuration de votre cache dans les settings, \ncependant une invalidation de cache est effectu\u00e9e \u00e0 chaque sauvegarde d'une instance ou de sa suppression.\n\nSi votre projet ne n\u00e9cessite pas d'utilisation du cache, il vous suffit de l'ignorer, par d\u00e9faut si il n'est \npas configur\u00e9 dans les *settings*, Django n'utilise pas de cache.\n", 
            "visible": true, 
            "template": "elastic_with_columns", 
            "published": "2012-02-06 10:24:37", 
            "lft": 4, 
            "order": 30, 
            "slug": "utilisation"
        }
    }, 
    {
        "pk": 11, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 6, 
            "level": 2, 
            "tree_id": 4, 
            "parent": 8, 
            "title": "Aide \u00e0 l'\u00e9dition", 
            "author": 1, 
            "modified": "2012-03-16 14:59:09", 
            "created": "2012-03-16 14:59:09", 
            "content": ".. _ReStructuredText: http://docutils.sourceforge.net/rst.html\r\n\r\nL'\u00e9dition se fait uniquement dans la syntaxe de `ReStructuredText`_, l'insertion directe de HTML \r\nn'est en g\u00e9n\u00e9ral pas permise.\r\n\r\nSyntaxe de ReStructuredText\r\n===========================\r\n\r\nLe principe de `ReStructuredText`_ (ou **ReST**) est de pouvoir r\u00e9diger son contenu en texte brut sans \r\nbalisages avec une syntaxe \u00e9volu\u00e9e qui permet de conserver un aspect lisible et une mise en \u00e9vidence \r\nde l'information.\r\n\r\nIl y a deux types d'\u00e9l\u00e9ments de syntaxe, les \u00e9l\u00e9ments dits *en ligne* comme la mise en gras ou en \r\nitalique et les \u00e9l\u00e9ments du types *blocs* tel qu'un paragraphe ou une liste \u00e0 puce. Sur ces derniers la \r\nchose principale \u00e0 retenir est de toujours respecter l'indentation lors de vos retours \u00e0 la ligne explicites.\r\n\r\nVous pouvez retrouver les documentations originales de RestructuredText pour plus de d\u00e9tails si besoin (tous \r\nen anglais) :\r\n\r\n* `Introduction \u00e0 la syntaxe <http://docutils.sourceforge.net/docs/user/rst/quickstart.html>`_; \r\n* `R\u00e9f\u00e9rence rapide de la syntaxe <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_;\r\n* `Un R\u00e9sum\u00e9 de la syntaxe en version texte <http://docutils.sourceforge.net/docs/user/rst/cheatsheet.txt>`_;\r\n* `Sp\u00e9cification compl\u00e8te de la syntaxe <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html>`_.\r\n\r\n\u00c9l\u00e9ments en lignes\r\n******************\r\n\r\nLes \u00e9l\u00e9ments communs de mise en forme tel que :\r\n\r\n* La mise en **gras** avec ``**gras**``;\r\n* La mise en *italique* avec ``*italique*``;\r\n* La mise en ``code litt\u00e9ral`` avec ````code litt\u00e9ral````;\r\n\r\nLiens\r\n*****\r\n\r\nIl y a diverses possibilit\u00e9s de cr\u00e9er des liens et de diff\u00e9rents types. Avec `ReStructuredText`_ on utilise plut\u00f4t le \r\nterme de **r\u00e9f\u00e9rence** au lieu de lien.\r\n\r\nLien externe direct\r\n-------------------\r\n\r\nPour un simple lien ponctuel on utilise une **r\u00e9f\u00e9rence externe directe** : ::\r\n\r\n  Mon texte avec mon `Lien <http://perdu.com/>`_ et voila.\r\n\r\nR\u00e9f\u00e9rence interne\r\n-----------------\r\n\r\nD\u00e8s lors que vous comptez utiliser une m\u00eame URL plusieurs fois dans un m\u00eame document, il faut utiliser une **r\u00e9f\u00e9rence \r\ninterne** qui s'apparente une ancre sauf qu'elle peut faire r\u00e9f\u00e9rence aussi bien \u00e0 une position dans le document (l\u00e0 \r\no\u00f9 elle a \u00e9t\u00e9 d\u00e9finie) qu'\u00e0 une URL.\r\n\r\nPar exemple : ::\r\n\r\n  .. _Mon lien perdu: http://perdu.com\r\n\r\nPourra ensuite \u00eatre utilis\u00e9 comme une r\u00e9f\u00e9rence interne de la fa\u00e7on suivante : ::\r\n\r\n  Mon texte avec mon `Mon lien perdu`_ et voila.\r\n\r\nSi vous utilisez plusieurs fois une m\u00eame URL (on parle bien d'URL compl\u00e8te et pas simplement de son \r\ndomaine), `ReStructuredText`_ vous en avertira.\r\n\r\nAncre\r\n-----\r\n\r\nComme annonc\u00e9 plus haut, vous pouvez aussi cr\u00e9er une r\u00e9f\u00e9rence interne qui servira d'ancre \u00e0 la position \r\nou elle a \u00e9t\u00e9 d\u00e9finie.\r\n\r\nPar exemple : ::\r\n\r\n  .. Ma super position:\r\n  \r\n  Mon texte lorem ipsum.\r\n  \r\n  ...\r\n\r\nPermettra d'utiliser la r\u00e9f\u00e9rence interne comme une ancre de la fa\u00e7on suivante : ::\r\n\r\n  Vous pouvez retrouver plus de d\u00e9tails \u00e0 `Ma super position`_.\r\n\r\n\u00c0 noter qu'il est inutile de cr\u00e9er des r\u00e9f\u00e9rences internes pour les `Titres`_ car ils le sont tous \r\nd\u00e9j\u00e0 automatiquement.\r\n\r\n\u00c9l\u00e9ments en blocs\r\n*****************\r\n\r\nG\u00e9n\u00e9ralement tout les \u00e9l\u00e9ments en blocs doivent \u00eatre s\u00e9par\u00e9s par une ligne vide (ou contenant juste \r\nl'indentation en cours) sinon il y a risque de confusion dans la mise en forme. De fait si vous \r\nrespectez cette indentation vous pouvez aussi imbriquer plusieurs blocs diff\u00e9rents.\r\n\r\nLe bloc le plus simple est le paragraphe, c'est celui par d\u00e9faut lorsque vous r\u00e9digez simplement \r\nvotre contenu sans indentation ou autre pr\u00e9fixe de ligne ou de *directive*. \u00c0 noter que \r\n`ReStructuredText`_ ne tient pas compte de vos retours de ligne dans vos paragraphes par \r\nexemple la source suivante : ::\r\n\r\n  Nam ultrices venenatis tempus. \r\n  Sed amet.\r\n\r\nNe rend qu'un seul paragraphe :\r\n\r\n  Nam ultrices venenatis tempus. Sed amet.\r\n\r\nAlors que la source suivante : ::\r\n\r\n  Nam ultrices venenatis tempus. \r\n  \r\n  Sed amet.\r\n\r\nProduit deux paragraphes :\r\n\r\n  Nam ultrices venenatis tempus. \r\n  \r\n  Sed amet.\r\n\r\nTitres\r\n------\r\n\r\nLes titres tiennent sur une ligne et doivent \u00eatre compl\u00e8tement souslign\u00e9s sur toute leur longueur, \r\npar exemple : ::\r\n\r\n  Titre 1\r\n  =======\r\n  \r\n  Mon texte..\r\n\r\nEt valide, mais pas l'\u00e9l\u00e9ment suivant : ::\r\n\r\n  Titre 1\r\n  =====\r\n  \r\n  Mon texte..\r\n    \r\nUn titre ouvre ce qu'on apelle une **section**. Lorsque vous ouvrez un titre dans une section, cela ouvre une \r\nsous section et ainsi de suite jusqu'\u00e0 un autre titre. Mais sauf cas particulier, ceci vous est totalement transparent.\r\n\r\nTout les titres sont des r\u00e9f\u00e9rences internes que vous pouvez utiliser comme lien interne au document par exemple : ::\r\n\r\n  Un lien vers le titre `\u00c9l\u00e9ments en blocs`_.\r\n\r\nDonnera :\r\n\r\n  Un lien vers le titre `\u00c9l\u00e9ments en blocs`_.\r\n\r\nVous pouvez utiliser les caract\u00e8res que vous souhaitez parmi ``=``, ``*``, ``-``, ``_``, ``#`` entre autres pour \r\nsoulign\u00e9s vos titres, ceci ne pointant pas vers un niveau de titre particulier car ce dernier est calcul\u00e9 \r\nautomatiquement selon l'ordre d'utilisation dans ses *sections*.\r\n\r\nListes \u00e0 puces et num\u00e9rot\u00e9es\r\n----------------------------\r\n\r\nLes listes \u00e0 puces sont simplement d\u00e9clar\u00e9es en ajoutant respectivement ``*`` ou ``#.`` suivi d'un espace et \r\nvotre texte pour une liste \u00e0 puce ou une liste num\u00e9rot\u00e9e. Pour introduire une sous liste, il faut la s\u00e9parer \r\navec une ligne vide avant et apr\u00e8s. Par exemple la source suivante : ::\r\n\r\n  * \u00e9l\u00e9ment 1\r\n  * \u00e9l\u00e9ment 2\r\n  \r\n    #. Sous \u00e9l\u00e9ment 2.1\r\n    #. Sous \u00e9l\u00e9ment 2.2\r\n  \r\n  * \u00e9l\u00e9ment 3\r\n  * \u00e9l\u00e9ment 4 avec un retour\r\n    forc\u00e9 \u00e0 la ligne\r\n  * \u00e9l\u00e9ment 5\r\n\r\nDonnera le r\u00e9sultat suivant :\r\n\r\n  * \u00e9l\u00e9ment 1\r\n  * \u00e9l\u00e9ment 2\r\n  \r\n    #. Sous \u00e9l\u00e9ment 2.1\r\n    #. Sous \u00e9l\u00e9ment 2.2\r\n  \r\n  * \u00e9l\u00e9ment 3\r\n  * \u00e9l\u00e9ment 4 avec un retour\r\n    forc\u00e9 \u00e0 la ligne\r\n  * \u00e9l\u00e9ment 5\r\n\r\nCitations\r\n---------\r\n\r\nUne citation se fait simplement en indentant chaque ligne de votre contenu, par exemple : ::\r\n\r\n      Nam ultrices **venenatis** tempus. \r\n      *Sed amet*.\r\n\r\nRend une citation :\r\n\r\n  Nam ultrices **venenatis** tempus. \r\n  *Sed amet*.\r\n\r\nTexte pr\u00e9format\u00e9\r\n----------------\r\n\r\n\u00c0 la mani\u00e8re des citations, on peut citer du texte ou du code sans qu'il ne soit interpr\u00eat\u00e9 \r\nsur sa syntaxe par le parser, il suffit de pr\u00e9c\u00e9der le contenu de ``::`` et d'indenter \r\nle contenu, par exemple : ::\r\n\r\n  ::\r\n  \r\n    Praesent eget **nulla** vitae lectus nullam.\r\n    \r\n    * \u00e9l\u00e9ment 1\r\n    * \u00e9l\u00e9ment 2\r\n  \r\nDonnera :\r\n  \r\n::\r\n\r\n  Praesent eget **nulla** vitae lectus nullam.\r\n  \r\n  * \u00e9l\u00e9ment 1\r\n  * \u00e9l\u00e9ment 2\r\n\r\nMais la fa\u00e7on la plus \u00e9vidente est simplement d'ajouter ``::`` \u00e0 la fin de la ligne du bloc \r\npr\u00e9c\u00e9dant, par exemple : ::\r\n\r\n  Mon annonce de citation pr\u00e9format\u00e9e : ::\r\n  \r\n    Praesent eget **nulla** vitae lectus nullam.\r\n\r\nDonnera :\r\n\r\n  Mon annonce de citation pr\u00e9format\u00e9e : ::\r\n  \r\n    Praesent eget **nulla** vitae lectus nullam.\r\n\r\nCode source\r\n-----------\r\n\r\nIl est possible d'afficher un bloc de code source avec une coloration syntaxique selon son format. \r\nCe bloc permet aussi de mettre en \u00e9vidence certaines lignes du code source et d'afficher ou la \r\nnum\u00e9rotation des lignes.\r\n\r\nPour un code source en **Javascript** sans num\u00e9rotation, la source suivante : ::\r\n\r\n  ..  sourcecode:: javascript\r\n      :linenos:\r\n  \r\n      function foobar(arg) {\r\n          var foo = 'bar';\r\n          var bar = arg*5;\r\n          return false;\r\n      };\r\n      \r\n      FOO = {\r\n        toto: true,\r\n        hello: 'world'\r\n      };\r\n\r\nDonnera :\r\n\r\n..  sourcecode:: javascript\r\n\r\n    function foobar(dummyarg) {\r\n        var foo = 'bar';\r\n        var bar = dummyarg*5;\r\n        return false;\r\n    };\r\n    \r\n    FOO = {\r\n      toto: true,\r\n      hello: 'world'\r\n    };\r\n\r\nOu pour un code source en **Python** avec num\u00e9rotation des lignes et mise en \u00e9vidence de \r\ncertaines lignes : ::\r\n\r\n  ..  sourcecode:: python\r\n      :linenos:\r\n      :hl_lines: 1,6\r\n  \r\n      class foobar(object):\r\n        def __init__(self, dummyarg):\r\n          self.plop = True\r\n      \r\n      FOO = {\r\n        'toto': True,\r\n        'hello': 'world',\r\n      }\r\n\r\nDonnera :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 1,6\r\n\r\n    class foobar(object):\r\n      def __init__(self, dummyarg):\r\n        self.plop = True\r\n    \r\n    FOO = {\r\n      'toto': True,\r\n      'hello': 'world',\r\n    }\r\n", 
            "visible": true, 
            "template": "elastic_with_columns", 
            "published": "2012-02-11 15:00:03", 
            "lft": 5, 
            "order": 1, 
            "slug": "aide-edition"
        }
    }, 
    {
        "pk": 2, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 9, 
            "level": 1, 
            "tree_id": 4, 
            "parent": 32, 
            "title": "Todolist", 
            "author": 1, 
            "modified": "2012-03-01 23:45:13", 
            "created": "2012-03-01 23:45:13", 
            "content": ".. contents::\r\n\r\nVues, formulaires et Webapp\r\n***************************\r\n\r\n#. **[Done]** Page de suppression d'un document;\r\n#. **[Done]** Mise en cache de la g\u00e9n\u00e9ration du rendu de contenu d'un document lors de son \r\n   enregistrement (cr\u00e9ation/\u00e9dition) avec mise \u00e0 jour auto (lors de son \u00e9dition) et \r\n   invalidation (lors de sa suppression);\r\n#. **[Done]** R\u00e9cup\u00e9ration des alertes du parser \u00e0 la soumission du formulaire pour le bloquer;\r\n#. **[Done]** Imposer le login required et permissions pour ajouter/\u00e9diter/supprimer;\r\n#. **[Done]** Renommer les url-name de ``document-xxxx`` en ``documents-document-xxxx``;\r\n#. **[Done]** Gestion du mode document int\u00e9gr\u00e9 (Mod\u00e8le, Vues, Admin, Template tag d'insertion, \r\n   cache, etc..);\r\n#. **[Done]** Gestion de templates/gabarits pour les pages, mais en dur, pas d'entr\u00e9e bdd tel \r\n   que dans kiwi;\r\n#. **[Done]** Impl\u00e9menter un breadcrumb;\r\n#. **[Done]** Commande pour vider tout les caches avec un clear() ou pour tout les objets \r\n   existants de documents\r\n#. **[Done]** Template tag pour g\u00e9n\u00e9rer un menu des pages d'un niveau donn\u00e9 (genre celles \u00e0 la \r\n   racine uniquement, etc..);\r\n#. **[Done]** Conversion en une webapp ``Sveetchies.django.documents``;\r\n#. **[Done]** Documenter bri\u00e8vement les options dans le ``documents.__init__`` et y d\u00e9brouiller \r\n   l'affaire de ``LANGUAGE_CODE``;\r\n#. **[Done]** Page d'installation/int\u00e9gration \u00e0 r\u00e9diger dans les documents;\r\n#. **[Done]** Commande en ligne pour exporter une ou des pages dans un fichier rst;\r\n#. **[Done]** Corriger le syst\u00e8me de menu qui peut provoquer plus d'une requ\u00eate \u00e0 chaque appel \u00e0 cause de \r\n   l'emploi de ``xxx.get_root()``;\r\n#. **[Done]** La liste de l'interface de gestion n'affiche pas les objets non visibles..;\r\n#. **[Done]** Supprimer les caches li\u00e9s en cas de suppression des Page/Insert;\r\n#. **[Done]** Mise en place du TOC dans le menu contextuel de la page;\r\n#. **[Done]** Template de d\u00e9tails de page suppl\u00e9mentaire pour supporter une vue en colonne (avec un tree menu \r\n   contextuel et toc);\r\n#. Nettoyer le ``initial_data.json`` de la d\u00e9mo;\r\n#. Page d\u00e9di\u00e9e ou bo\u00eete de login pour la d\u00e9mo, afin de pouvoir se logguer sans avoir \u00e0 trouver l'url de l'admin;\r\n#. Tenter d'am\u00e9liorer le templatetag qui g\u00e9n\u00e8re la navigation de sous-page qui effectue inutilement deux \r\n   requ\u00eates au lieu d'une seule (probablement \u00e0 cause de son utilisation dans le template), diagnostiquable \r\n   ais\u00e9ment avec la DjangoDebutToolbar;\r\n\r\nInterface de gestion des documents\r\n**********************************\r\n\r\n#. **[Done]** Date de publication avec un plugin jquery calendar;\r\n#. **[Done]** Tableau de gestion en arborescence des documents;\r\n#. **[Done]** En cas d'\u00e9dition, le menu de s\u00e9l\u00e9ction de parent\u00e9 affiche toute les pages possibles, il ne doit \r\n   pas afficher les descendants de la page en cours;\r\n#. **[Done]** Pouvoir directement cr\u00e9er une nouvelle *sous page*;\r\n#. Le clic sur une ligne de l'arbo de gestion envoi par d\u00e9faut sur la page d'\u00e9dition, mais pas lors d'un clic \r\n   dans le menu de la ligne;\r\n#. Pouvoir les ordonner en une fois les pages (pas de drag'n'drop pour l'instant trop compliqu\u00e9, un simple menu \r\n   de s\u00e9l\u00e9ction qui conduit \u00e0 un reload ajax pour updater la liste);\r\n#. JS pour rendre invisible une page (et sous pages) ou visible (mais pas r\u00e9cursivement);\r\n#. Joli bouton/panneau pour inviter \u00e0 cr\u00e9er un objet quand il n'y en a pas (dans Page ou Insert);\r\n#. S\u00e9parer la gestion des pages et des documents ins\u00e9rables;\r\n#. Am\u00e9liorer l'aspect/contenu de la page de suppression pour plus de clairet\u00e9;\r\n\r\nEditeur\r\n*******\r\n\r\n#. **[Done]** Faire une version *minimalised* de la lib js de markitup;\r\n#. **[Done]** Remplissage automatique du slug \u00e0 partir du titre lors de la cr\u00e9ation et avertissement \r\n   de changement sous l'input du slug quand le titre change;\r\n#. **[Done]** Revoir la position des boutons du fullscreen/preview;\r\n#. **[Done]** Localiser en FR markitup;\r\n#. **[Done]** Bouton pour utiliser pygments;\r\n#. **[Done]** Etudier et faire l'int\u00e9gration de CodeMirror en l'enrichissant d'une interface de \r\n   boutons comme avec MarkItUp;\r\n#. **[Done]** Faire de SuperCodeMirror l'\u00e9diteur par d\u00e9faut, mais permettre de *switcher* sur \r\n   MarkItUp;\r\n#. Deprecation de MarkItUp;\r\n#. Trouver une technique pour aider \u00e0 une justification manuelle, soit une marque visuelle indiquant \r\n   la limite de colonne (qu'on peut d\u00e9placer), soit une correction du parser ou de l'\u00e9diteur pour \r\n   mettre coup\u00e9 correctement les lignes (pas de coupures dans une syntaxe, conservation de \r\n   l'indentation, etc..);\r\n\r\nSuperCodeMirror\r\n***************\r\n\r\n#. **[Done]** Boutons d'\u00e9l\u00e9ments de syntaxe;\r\n#. **[Done]** Fullscreen;\r\n#. **[Done]** Preview;\r\n#. **[Done]** Signal d'erreur sur l'onglet de preview en cas d'\u00e9chec de la requ\u00eate (qui doit \u00eatre \r\n   effac\u00e9 \u00e0 chaque (before) nouvelle tentative);\r\n#. **[Done]** Supporter les resizes sur le fullscreen et preview;\r\n#. **[Done]** Adapter la hauteur de ligne en fullscreen \u00e0 sa taille de police (ratio \u00e0 copier de \r\n   la version 'standard');\r\n#. **[Done]** Highlight discret de la ligne en cours;\r\n#. Ne pas d\u00e9placer le curseur apr\u00e8s une insertion si il est d\u00e9j\u00e0 \u00e0 la fin de la ligne;\r\n#. Am\u00e9liorer le binding des touches de raccourcis clavier;\r\n#. Am\u00e9liorer la gestion des images;\r\n\r\nParser\r\n******\r\n\r\n#. **[Done]** Parser ReST et son templatetags sur mesure, celui de ``django.markup`` est trop limit\u00e9;\r\n#. **[Done]** Option dans les settings de django pour s\u00e9curiser l'injection de html;\r\n#. **[Done]** Bloc de code avec Pygments dans le parser ReST;\r\n#. **[Done]** Ajuster les prefixes de class css avec Pygments;\r\n#. **[Done]** Gestion interne des slug des documents pour produire une url automatique tel des mots Wiki par \r\n   lien de r\u00e9f\u00e9rence dans ReST;\r\n#. **[Done]** Page d'aide interne sur la syntaxe ReST et l'\u00e9diteur;\r\n#. Continuer d'am\u00e9liorer la doc (aide interne pour les roles/directives utiles, description des tags, etc..);\r\n\r\nNon-plannifi\u00e9s\r\n**************\r\n\r\n* Migrer vers `django-crispy-forms <http://django-crispy-forms.readthedocs.org>`_;\r\n* Utilisation de I18n au moins pour l'interface, formulaire et mod\u00e8les;\r\n* Contenus multi-langues;\r\n* Organisation des pages par drag'n'drop;\r\n* Gestion de r\u00e9visions des Pages (et Insert?);\r\n* Ajouter un champ ``stylesheets`` au mod\u00e8le ``Page`` pour pouvoir ins\u00e9rer directement des styles \r\n  css li\u00e9s au contenu;\r\n* R\u00e9fl\u00e9chir \u00e0 un syst\u00e8me de registre interne (volatile?) de cl\u00e9s de caches variables, qu'on peut lier \u00e0 \r\n  des instances (par leur type d'instance et leur id ?), pour que les instances li\u00e9es puissent sonder ce \r\n  registre et invalider les caches li\u00e9s si besoin (en cas de changement, suppression, etc..);\r\n* Facilit\u00e9s pour g\u00e9rer les images (album/galerie/browser des m\u00e9dias/etc..);\r\n* Commande en ligne pour exporter les pages dans un ensemble de fichiers rst utilisables avec \r\n  sphinx (donc avec un TOC en index);\r\n* Bouton+raccourci clavier pour valider directement le contenu et soumettre le formulaire;\r\n* D\u00e9solidariser les \u00e9l\u00e9ments/m\u00e9thodes propres \u00e0 la syntaxe ReST pour permettre l'utilisation d'une \r\n  autre syntaxe;\r\n* Trouver une option pour utiliser des ``<del/>`` (avec un *role* sp\u00e9cifique c'est possible sans soucis);\r\n* Directives suppl\u00e9mentaires utiles;\r\n\r\n", 
            "visible": true, 
            "template": "fixed_absolute", 
            "published": "2012-01-24 21:08:41", 
            "lft": 8, 
            "order": 100, 
            "slug": "todolist"
        }
    }, 
    {
        "pk": 35, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 2, 
            "level": 0, 
            "tree_id": 5, 
            "parent": null, 
            "title": "Django CodeMirror", 
            "author": 1, 
            "modified": "2012-03-16 00:37:06", 
            "created": "2012-03-16 00:37:06", 
            "content": ".. _CodeMirror: http://codemirror.net/\r\n.. _Documentation de CodeMirror: http://codemirror.net/doc/manual.html\r\n.. _jQuery: http://jquery.com/\r\n.. _jQuery.axax(): http://api.jquery.com/jQuery.ajax/\r\n.. _Django CSRF: https://docs.djangoproject.com/en/dev/ref/contrib/csrf/\r\n.. _Django staticfiles: https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/\r\n.. _ReStructuredText: http://docutils.sourceforge.net/rst.html\r\n.. _qTip2: http://craigsworks.com/projects/qtip2/\r\n\r\nIntroduction\r\n============\r\n\r\nCettre brique pour Django permet d'utiliser l'\u00e9diteur `CodeMirror`_ sur \r\nles *Textarea* avec un widget sp\u00e9cifique.\r\n\r\nPr\u00e9vu par d\u00e9faut pour \u00eatre utilis\u00e9 par :page:`sveetchies-documents`, il utilise donc un environnement \r\npour `ReStructuredText`_ et une interface suppl\u00e9mentaire \u00e0 `CodeMirror`_. Cette interface qu'on appellera \r\n`DjangoCodeMirror`_ n\u00e9cessite `jQuery`_ et ajouter quelques fonctionnalit\u00e9s suppl\u00e9mentaires :\r\n\r\n* Une barre de boutons avec raccourcis clavier pour ins\u00e9rer des \u00e9l\u00e9ments de syntaxe;\r\n* Possibilit\u00e9 de maximiser l'\u00e9diteur \u00e0 la dimension compl\u00e8te de la fen\u00eatre du navigateur;\r\n* Un mode de pr\u00e9visualisation compatible avec le syst\u00e8me `Django CSRF`_;\r\n* Un aspect visuel *renforc\u00e9* d'\u00e9diteur par rapport \u00e0 `CodeMirror`_;\r\n\r\nPar d\u00e9faut, le plugin est pr\u00e9vu pour fonctionner avec le mode de syntaxe `ReStructuredText`_ que vous pouvez \r\nremplacer par un autre des modes de syntaxe de `CodeMirror`_ ou un des votres.\r\n\r\nRequiert :\r\n\r\n* `jQuery`_ >= 1.7;\r\n\r\nInstallation\r\n============\r\n\r\nSettings\r\n********\r\n\r\nIl suffit d'inscrire l'application \u00e0 votre projet, en modifiant ``INSTALLED_APPS`` dans vos ``settings`` \r\nen y rajoutant ces deux lignes :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 3\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'Sveetchies.django.djangocodemirror',\r\n        ...\r\n    )\r\n\r\nIl est aussi n\u00e9cessaire que vous installiez une copie de `CodeMirror`_ dans vos *statics* `Django staticfiles`_, \r\nl'emplacement par d\u00e9faut pr\u00e9vu est dans un r\u00e9pertoire ``CodeMirror/`` \u00e0 la racine de vos *statics*. Vous devez \r\naussi poss\u00e9der une copie de `jQuery`_ et le d\u00e9clarer vous m\u00eames dans vos *templates*.\r\n\r\nUtilisation\r\n===========\r\n\r\nDjangoCodeMirror\r\n****************\r\n\r\nL'\u00e9diteur `DjangoCodeMirror`_ est une *surcouche* de `CodeMirror`_ et construit comme un plugin `jQuery`_. Lors \r\nde son instanciation le plugin accepte les m\u00eames param\u00e8tres que `CodeMirror`_ avec quelques options \r\nsuppl\u00e9mentaires :\r\n\r\nfullscreen\r\n  Active le mode pour maximiser l'\u00e9diteur si ``true``, d\u00e9sactiv\u00e9 si ``false``. Il est activ\u00e9 par d\u00e9faut.\r\nhelp_link\r\n  Lien \u00e0 utiliser pour la page d'aide si rempli (par une cha\u00eene de caract\u00e8res), sinon le bouton d'aide n'est pas \r\n  affich\u00e9. \u00c0 noter que le lien est toujours ouvert dans une nouvelle fen\u00eatre.\r\nquicksave_url\r\n  URL o\u00f9 envoyer les donn\u00e9es \u00e0 travers une requ\u00eate de type **POST** en utilisant l'option de ``csrf`` \r\n  si il est activ\u00e9. Vide et donc d\u00e9sactiv\u00e9 par d\u00e9faut. \r\n  \r\n  La requ\u00eate envoi les variables suivantes :\r\n  \r\n  * ``nocache`` : un *timestamp* qui sert uniquement \u00e0 emp\u00eache la mise en cache des requ\u00eates par certains vieux \r\n    navigateurs;\r\n  * ``content`` : le contenu du *Textarea* tel qu'il est au moment de l'envoi de la requ\u00eate.\r\nquicksave_datas\r\n  Objet (``{..}``) de variables \u00e0 transmettre dans la requ\u00eate de sauvegarde rapide. Peut \u00eatre \r\n  aussi une cha\u00eene de caract\u00e8res qui sera consid\u00e9r\u00e9e comme un nom de variable \u00e0 utiliser pour retrouver l'objet \u00e0 \r\n  transmettre, c'est la technique \u00e0 pr\u00e9f\u00e9rer dans le cas d'utilisation de `DjangoCodeMirrorField`_ et `CodeMirrorWidget`_ \r\n  pour \u00e9viter d'avoir \u00e0 transmettre l'instance du contenu dans les options lors de l'instanciation du formulaire.\r\npreview_url\r\n  Attends une cha\u00eene de caract\u00e8res, si rempli le mode de pr\u00e9visualisation est utilis\u00e9 et l'URL \r\n  donn\u00e9e sera utilis\u00e9e pour envoyer une requ\u00eate **POST** qui attends une r\u00e9ponse HTML avec le fragment HTML du rendu \r\n  de pr\u00e9visualisation. Utilise l'option de ``csrf`` si il est activ\u00e9.\r\n  \r\n  La requ\u00eate envoi les variables suivantes :\r\n  \r\n  * ``nocache`` : un *timestamp* qui sert uniquement \u00e0 emp\u00eache la mise en cache des requ\u00eates par certains vieux \r\n    navigateurs;\r\n  * ``content`` : le contenu du *Textarea* tel qu'il est au moment de l'envoi de la requ\u00eate.\r\ncsrf\r\n  Attends une chaine de caract\u00e8res repr\u00e9sentant le nom de la fonction \u00e0 utiliser lors de la pr\u00e9visualisation \r\n  pour ins\u00e9rer un *header* d\u00e9crivant le *token* de `Django CSRF`_. D\u00e9sactiv\u00e9 par d\u00e9faut.\r\n  \r\n  La fonction attends deux arguments obligatoires :\r\n  \r\n  * xhr : une fonction de *callback* de la requ\u00eate produite par `jQuery`_ qui permet de la modifier avant son envoi;\r\n  * settings : objet des options pass\u00e9es \u00e0 `jQuery.axax()`_.\r\n  \r\n  Cette fonction est destin\u00e9e \u00e0 une utilisation dans l'option ``beforeSend`` de `jQuery.axax()`_ pour r\u00e9cup\u00e9rer le *token csrf* \r\n  dans les cookies et le transmettre dans la requ\u00eate.\r\npreview_padding\r\n  Taille (en pixels) du padding de l'\u00e9diteur en mode pr\u00e9visualisation. Il est d\u00e9conseill\u00e9 d'y toucher et \r\n  il sera probablement *deprecated* d'i\u00e7i peu.\r\npreview_borders\r\n  \u00c9paisseur (en pixels) de la bordure du cadre de l'\u00e9diteur en mode pr\u00e9visualisation. Il est d\u00e9conseill\u00e9 \r\n  d'y toucher et il sera probablement *deprecated* d'i\u00e7i peu.\r\n\r\nCes options n'ont d'int\u00e9r\u00eat que dans le contexte de `DjangoCodeMirror`_ et `CodeMirror`_ n'en a aucune utilit\u00e9.\r\n\r\nUn exemple complet d'instanciation directe :\r\n\r\n..  sourcecode:: html\r\n    :linenos:\r\n    \r\n    <div>\r\n        <textarea id=\"id_content\" rows=\"10\" cols=\"40\" name=\"content\"></textarea>\r\n        <script language=\"JavaScript\" type=\"text/javascript\">\r\n        //<![CDATA[\r\n            $(document).ready(function() {\r\n                id_content_codemirror_instance = $('#id_content').djangocodemirror({\r\n                    \"mode\": \"rst\",\r\n                    \"csrf\": \"CSRFpass\",\r\n                    \"quicksave_url\": \"/djangocodemirror-sample/quicksave/\",\r\n                    \"preview_url\": \"/djangocodemirror-sample/preview/\",\r\n                    \"lineWrapping\": true,\r\n                    \"lineNumbers\": true\r\n                });\r\n            });\r\n        //]]>\r\n        </script>\r\n    </div>\r\n\r\n`DjangoCodeMirror`_ embarque :\r\n\r\n* Une copie de `CodeMirror`_;\r\n* Une fonction de **csrf** pour utiliser la technique de `Django CSRF`_;\r\n* Une copie du plugin `jquery.cookies <http://plugins.jquery.com/project/Cookie>`_ utilis\u00e9 uniquement par la fonction de **csrf**;\r\n* Une copie du plugin `qTip2`_;\r\n\r\nCodeMirrorWidget\r\n****************\r\n\r\nVous pouvez d\u00e9clarer le widget ``Sveetchies.django.djangocodemirror.fields.CodeMirrorWidget`` sur un champ de \r\nformulaire de la fa\u00e7on suivante :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 4\r\n\r\n    from Sveetchies.django.djangocodemirror.fields import CodeMirrorWidget\r\n    \r\n    class CodeMirrorSampleForm(forms.Form):\r\n        content = forms.CharField(label=u\"Votre texte\", widget=CodeMirrorWidget)\r\n        \r\n        def save(self, *args, **kwargs):\r\n            return\r\n\r\nEn plus de l'attribut ``attrs`` habituel d'un widget, `CodeMirrorWidget`_ accepte aussi deux arguments \r\noptionnels suppl\u00e9mentaires :\r\n\r\n* ``codemirror_only`` d\u00e9sactive l'utilisation de `DjangoCodeMirror`_ et utilise \u00e0 la place `CodeMirror`_;\r\n* ``codemirror_attrs`` : attends un dictionnaire des param\u00e8tres d'instanciation de l'\u00e9diteur.\r\n\r\nPar exemple :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 4\r\n\r\n    from Sveetchies.django.djangocodemirror.fields import CodeMirrorWidget\r\n    \r\n    class CodeMirrorSampleForm(forms.Form):\r\n        content = forms.CharField(label=u\"Votre texte\", widget=CodeMirrorWidget(codemirror_only=True, codemirror_attrs={'lineNumbers':True}))\r\n        \r\n        def save(self, *args, **kwargs):\r\n            return\r\n\r\nAvec ceci le champ ``content`` utilisera l'\u00e9diteur `CodeMirror`_ en activant la num\u00e9rotation des lignes.\r\n\r\nM\u00e9dias\r\n------\r\n\r\nDans votre template, il faudra charger les m\u00e9dias li\u00e9s au formulaire (et donc au widget) en utilisant par \r\nexemple : ::\r\n\r\n  {{ form.media }}\r\n\r\nCodeMirrorField\r\n***************\r\n\r\nCe champ de formulaire est un h\u00e9ritage de ``django.forms.CharField`` qui int\u00e8gre directement le widget \r\n`CodeMirrorWidget`_ en y forcant l'option ``codemirror_only`` pour n'utiliser que l'\u00e9diteur `CodeMirror`_.\r\n\r\nEn outre des arguments de ``django.forms.CharField`` il accepte aussi l'argument optionnel \r\n``codemirror_attrs`` de la m\u00eame mani\u00e8re qu'avec `CodeMirrorWidget`_.\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 5\r\n\r\n    from django import forms\r\n    from Sveetchies.django.djangocodemirror.fields import CodeMirrorField\r\n    \r\n    class CodeMirrorSampleForm(forms.Form):\r\n        content_codemirror = CodeMirrorField(label=u\"Votre texte\", codemirror_attrs={'lineNumbers':True})\r\n        \r\n        def save(self, *args, **kwargs):\r\n            return\r\n\r\nDjangoCodeMirrorField\r\n*********************\r\n\r\nDe la m\u00eame mani\u00e8re que `CodeMirrorField`_, ce champ est un h\u00e9ritage de ``django.forms.CharField`` qui int\u00e8gre \r\ndirectement le widget `CodeMirrorWidget`_ mais pour utiliser l'\u00e9diteur `DjangoCodeMirror`_.\r\n\r\nIl se comporte de la m\u00eame fa\u00e7on que `CodeMirrorField`_ et accepte le m\u00eame argument optionnel ``codemirror_attrs``.\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 5\r\n\r\n    from django import forms\r\n    from Sveetchies.django.djangocodemirror.fields import CodeMirrorField\r\n    \r\n    class CodeMirrorSampleForm(forms.Form):\r\n        content_djangocodemirror = DjangoCodeMirrorField(label=u\"Votre texte\", codemirror_attrs={'lineNumbers':True})\r\n        \r\n        def save(self, *args, **kwargs):\r\n            return\r\n\r\nOptions\r\n=======\r\n\r\nIl est possible de contr\u00f4ler certains comportements de l'\u00e9diteur depuis vos *settings* via les variables suivantes. \r\nVous pourrez retrouver toute les valeurs par d\u00e9faut de ces variables dans ``Sveetchies.django.djangocodemirror``.\r\n\r\nDJANGOCODEMIRROR_FIELD_INIT_JS\r\n******************************\r\n\r\nLe code HTML d'instanciation de `DjangoCodeMirror`_ sur un champ de formulaire. C'est un *template* de cha\u00eene\r\nde caract\u00e8re utilisable avec ``String.format()`` qui recevra deux variables :\r\n\r\n* ``inputid`` : l'identifiant unique du champ sur lequel instancier l'\u00e9diteur;\r\n* ``settings`` : une cha\u00eene de caract\u00e8res contenant les options d'instanciations de l'\u00e9diteur au format JSON.\r\n\r\nCODEMIRROR_FIELD_INIT_JS\r\n************************\r\n\r\nLe code HTML d'instanciation de `CodeMirror`_ sur un champ de formulaire. C'est un *template* de cha\u00eene\r\n\r\nCODEMIRROR_SETTINGS\r\n*******************\r\n\r\nUn dictionnaire contenant diff\u00e9rents sch\u00e9mas d'options pour les \u00e9diteurs. Vous pouvez y mettre toute les \r\noptions attendues par `CodeMirror`_ plus celles de `DjangoCodeMirror`_. \u00c0 noter que dans les templates ces options \r\nsont transmises aux \u00e9diteurs dans un format JSON.\r\n\r\nPar d\u00e9faut quelques sch\u00e9mas d'options sont fournis :\r\n\r\n* ``default`` : Ne fait que d\u00e9finir l'option pour activer la num\u00e9rotation des lignes;\r\n* ``djangocodemirror`` : D\u00e9finit les options minimales pour `DjangoCodeMirror`_ (num\u00e9rotation des lignes et le mode \r\n  de syntaxe ``rst`` pour `ReStructuredText`_);\r\n* ``djangocodemirror_with_preview`` : Reprends les m\u00eames options que ``djangocodemirror`` plus celle pour activer la \r\n  pr\u00e9visualisation sur l'URL ``/preview/``.\r\n* ``djangocodemirror_sample_demo`` : Reprends les m\u00eames options que ``djangocodemirror_with_preview`` mais calibr\u00e9s \r\n  pour fonctionner dans le cadre de `Ensemble de d\u00e9monstration`_.\r\n\r\nDJANGOCODEMIRROR_DEFAULT_SETTING\r\n********************************\r\n\r\nLe nom cl\u00e9 du sch\u00e9ma par d\u00e9faut \u00e0 utiliser pour `DjangoCodeMirror`_ tel qu'avec le champ `DjangoCodeMirrorField`_.\r\n\r\nCODEMIRROR_MODES\r\n****************\r\n\r\nUne liste de *tuple* des diff\u00e9rents modes de syntaxe disponibles pour `CodeMirror`_. La liste contenue par d\u00e9faut \r\nest une liste reproduite \u00e0 partir de tout les modules officiels existants `CodeMirror`_.\r\n\r\nChemins relatifs des m\u00e9dias\r\n***************************\r\n\r\nVous pouvez si besoin, modifier tout les chemins des m\u00e9dias li\u00e9s au widget `CodeMirrorWidget`_. Leur chemin est \r\nrelatif \u00e0 votre emplacement des fichiers statiques (voyez `Django staticfiles`_) ou des m\u00e9dias si vous n'utilisez \r\npas les *staticfiles*.\r\n\r\nCi-dessous les diff\u00e9rents chemins :\r\n\r\nCODEMIRROR_FILEPATH_LIB\r\n  La librairie JavaScript de `CodeMirror`_.\r\nCODEMIRROR_FILEPATH_CSS\r\n  Le fichier CSS de `CodeMirror`_.\r\nDJANGOCODEMIRROR_FILEPATH_LIB\r\n  La librairie JavaScript de `DjangoCodeMirror`_.\r\nDJANGOCODEMIRROR_FILEPATH_CSS\r\n  Le fichier CSS de `DjangoCodeMirror`_.\r\nDJANGOCODEMIRROR_FILEPATH_BUTTONS\r\n  Composant JavaScript d\u00e9finissant les boutons disponibles dans l'\u00e9diteur, \u00e0 surclasser (en cr\u00e9\u00e9ant le votre et \r\n  renseignant son chemin \u00e0 la place dans vos **settings**).\r\nDJANGOCODEMIRROR_FILEPATH_METHODS\r\n  Composant JavaScript d\u00e9finissant les m\u00e9thodes utilis\u00e9s par les boutons disponibles de l'\u00e9diteur, \u00e0 surclasser \r\n  (en cr\u00e9\u00e9ant le votre et renseignant son chemin \u00e0 la place dans vos **settings**).\r\nDJANGOCODEMIRROR_FILEPATH_CONSOLE\r\n  Composant JavaScript pour les notifications de l'\u00e9diteur.\r\nDJANGOCODEMIRROR_FILEPATH_CSRF\r\n  Le composant JavaScript de permettant le support du syst\u00e8me `Django CSRF`_ dans les pr\u00e9visualisations avec `DjangoCodeMirror`_.\r\nDJANGOCODEMIRROR_FILEPATH_COOKIES\r\n  Le plugin `jQuery`_ pour utiliser acc\u00e9der aux cookies, n\u00e9cessaire pour `Django CSRF`_.\r\nQTIP_FILEPATH_LIB\r\n  La librairie JavaScript de `qTip2`_.\r\nQTIP_FILEPATH_CSS\r\n  Le fichier CSS de `qTip2`_.\r\n\r\nPar d\u00e9faut tout ces chemins sont d\u00e9j\u00e0 configur\u00e9s pour fonctionner avec les m\u00e9dias d\u00e9j\u00e0 fournis dans la brique \r\nlogicielle mais vous pouvez les modifier selon vos besoins.\r\n\r\nEnsemble de d\u00e9monstration\r\n=========================\r\n\r\nUn ensemble de d\u00e9monstration complet est inclus dans ``Sveetchies.django.djangocodemirror.views`` et dans \r\n``Sveetchies.django.djangocodemirror.urls``.\r\n\r\nVous pouvez l'inclure \u00e0 votre projet simplement en incluant ses urls \u00e0 votre fichier ``urls.py`` de votre \r\nprojet :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 3\r\n\r\n    urlpatterns = patterns('',\r\n        ...\r\n        (r'^djangocodemirror-sample/', include('Sveetchies.django.djangocodemirror.urls')),\r\n        ...\r\n    )\r\n\r\nTrois vues y sont pr\u00e9sentes :\r\n\r\n* L'index (donc ``djangocodemirror-sample/`` si vous n'avez pas chang\u00e9 le point de montage des urls) qui affiche \r\n  la d\u00e9monstration utilisant le mode de syntaxe pour `ReStructuredText`_;\r\n* ``preview/`` pour la pr\u00e9visualisation de l'\u00e9diteur, utilise le parser de :page:`sveetchies-documents` si il est \r\n  disponible, sinon renvoi un contenu *bidon*. N'accepte que les requ\u00eates de type **POST**, renverra une simple \r\n  r\u00e9ponse vide pour toute requ\u00eate de type **GET**;\r\n* ``quicksave/`` pour simuler la sauvegarde rapide. N'effectue aucune sauvegarde mais test au moins le contenu pour \r\n  renvoyer une erreur le cas \u00e9ch\u00e9ant. La validation utilise le parser :page:`sveetchies-documents` si il est install\u00e9 \r\n  sinon aucune r\u00e9elle validation de syntaxe n'est effectu\u00e9e (seulement celle du formulaire);\r\n", 
            "visible": true, 
            "template": "elastic_with_columns", 
            "published": "2012-03-09 01:11:26", 
            "lft": 1, 
            "order": 15, 
            "slug": "django-codemirror"
        }
    }, 
    {
        "pk": 33, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 2, 
            "level": 0, 
            "tree_id": 6, 
            "parent": null, 
            "title": "AutoBreadcrumbs", 
            "author": 1, 
            "modified": "2012-03-02 12:17:53", 
            "created": "2012-03-02 12:17:53", 
            "content": "Introduction\r\n============\r\n\r\nAutoBreadcrumbs est un module permettant le calcul automatique du chemin d'acc\u00e8s d'une page \r\n(*ou chemin de parcours* ) dans les urls. Par exemple : ::\r\n\r\n  Accueil > Mon appli > Ma vue\r\n\r\nChaque \u00e9l\u00e9ment est une miette (*breadcrumb*) du chemin complet contenant un lien pour pouvoir se d\u00e9placer \r\nrapidement. Le chemins d'acc\u00e8s est une m\u00e9thode d'ergonomie pour l'utilisateur et lui faciliter sa \r\nlocalisation dans un site.\r\n\r\nInstallation\r\n============\r\n\r\nIl suffit de modifier les *settings* de votre projet en rajoutant une ligne pour \r\ninscrire l'application dans votre projet :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 3\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'Sveetchies.django.autobreadcrumbs',\r\n        ...\r\n    )\r\n\r\nPuis inscrire aussi son *context processor* :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n    :hl_lines: 3\r\n\r\n    TEMPLATE_CONTEXT_PROCESSORS = (\r\n        ...\r\n        'Sveetchies.django.autobreadcrumbs.context_processors.AutoBreadcrumbsContext',\r\n        ...\r\n    )\r\n\r\nUtilisation\r\n===========\r\n\r\nPour fonctionner correctement dans votre projet il vous faudra que toute les urls soit nomm\u00e9es \r\ncorrectement (avec leur attribut ``name``).\r\n\r\nMais aussi une solide organisation de la map des urls du site car des ressources diff\u00e9rentes \r\npassant par une m\u00eame url peuvent provoquer des probl\u00e8mes. De m\u00eame pour des parties de \r\nl'url qui ne sont pas disponibles pour tout les utilisateurs (\u00e0 cause d'une restriction \r\nd'acc\u00e8s ou autre) qui s'afficheront dans le chemin d'acc\u00e8s alors qu'elles ne le devraient \r\npas (si par exemple n'a pas les permissions pour acc\u00e9der \u00e0 une ressource du chemin).\r\n\r\nRegistre des vues\r\n********************\r\n\r\nInscription\r\n-----------\r\n\r\nLe *context processor* effectue une recherche \u00e0 partir de l'url en cours qu'il d\u00e9coupe en segments \r\nqui produiront les miettes du chemin.\r\n\r\nPour qu'il reconnaisse une ressource comme une miette de chemin \u00e0 afficher, votre ressource doit \r\nposs\u00e9der un attribut statique ``title`` (*string*) ou ``titles`` (*dict*) d\u00e9finit sur les \r\nm\u00e9thodes de vues (*views*) (facilit\u00e9 avec l'usage du d\u00e9corateur). \r\n\r\nUne entr\u00e9e dans ``settings.AUTOBREADCRUMBS_TITLES`` sous la forme d'un tuple ``(url-name, title)`` \r\nfonctionne aussi.\r\n\r\nLors de la recherche par le *context processor*, chaque ressource est class\u00e9e par le nom d'url qui la \r\nd\u00e9finit et il les consid\u00e8rent chacune dans l'ordre suivant :\r\n\r\n#. La ressource a t'elle une entr\u00e9e ``settings.AUTOBREADCRUMBS_TITLES`` si oui l'utilise et passe \u00e0 la \r\n   ressource suivante;\r\n#. La ressource a t'elle un attribut ``crumb_titles`` si oui tente d'y r\u00e9cup\u00e9rer une entr\u00e9e pour son nom \r\n   d'url avant de passer \u00e0 la ressource suivante;\r\n#. La ressource a t'elle un attribut ``crumb_title`` si oui l'utilise et passe \u00e0 la ressource suivante;\r\n#. Si aucune des conditions suivantes n'ont \u00e9t\u00e9 remplies, ignore la ressource et passe \u00e0 la suivante;\r\n\r\nL'emplacement du titre peut \u00eatre un tuple contenant le titre plus une m\u00e9thode (*function*) de contr\u00f4le d'acc\u00e8s \r\nprenant le *request* en unique argument et renvoyant *True* pour accepter l'entr\u00e9e ou *False* pour ignorer la \r\nressource.\r\n\r\n.. NOTE:: Les *Class base views* de Django 1.3.x sont actuellement ignor\u00e9s par autobreadcrumbs, et les \r\n          d\u00e9corateurs ne fonctionnent pas dessus. Il vous faudra les inscrire dans \r\n          ``settings.AUTOBREADCRUMBS_TITLES``.\r\n\r\nExclusion\r\n---------\r\n\r\nOn peut aussi utiliser ``@autobreadcrumb_hide`` pour exclure une vue des miettes, de \r\nm\u00eame indiquer ``None`` en valeur d'un titre l'exclut aussi des miettes, cela fonctionne aussi lors \r\nde la d\u00e9claration dans ``settings.AUTOBREADCRUMBS_TITLES``.\r\n\r\nExemples\r\n--------\r\n\r\nExemple simple pour une vue :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    @autobreadcrumb_add(u\"Mon zuper zindex\")\r\n    def index(request):\r\n        ....\r\n\r\nAvec un titre diff\u00e9rent pour plusieurs urls qui utilisent la m\u00eame vue :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    @autobreadcrumb_add({\r\n        \"pages-index1\": u\"Mon zuper zindex\",\r\n        \"pages-index2\": u\"My upper index\",\r\n    })\r\n    def index(request):\r\n        ....\r\n\r\n.. autobreadcrumbs_titles\r\n\r\nDans les settings :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    AUTOBREADCRUMBS_TITLES = {\r\n        \"pages-index1\": u\"Mon zuper zindex\",\r\n        \"pages-index2\": u\"My upper index\",\r\n    }\r\n\r\nTemplates\r\n*********\r\n\r\nDans vos templates disposant du context global, deux variables suppl\u00e9mentaires \r\n(`autobreadcrumbs_elements`_ et `autobreadcrumbs_current`_) seront ins\u00e9r\u00e9es pour chaque page.\r\n\r\nautobreadcrumbs_elements\r\n------------------------\r\n\r\nLe chemin d'acc\u00e8s sera disponible dans cette variable du contexte de template et contiendra une liste \r\nd'instances de ``BreadcrumbRessource`` pour chaque miette du chemin. Chaque instance de ``BreadcrumbRessource`` \r\ncontient les attributs suivants :\r\n\r\n* ``path`` : le chemin relatif de l'url qui m\u00e8ne \u00e0 la ressource;\r\n* ``name`` : nom de l'url de la ressource;\r\n* ``title`` : titre \u00e0 afficher pour la ressource dans le chemin d'acc\u00e8s;\r\n* ``view_args`` : liste d'arguments pass\u00e9s \u00e0 l'url de la ressource;\r\n* ``view_kwargs`` : liste des arguments nomm\u00e9s pass\u00e9s \u00e0 l'url de la ressource;\r\n\r\nautobreadcrumbs_current\r\n-----------------------\r\n\r\nCette variable contiendra l'instance ``BreadcrumbRessource`` de la ressource en cours, elle est identique au dernier \r\n\u00e9l\u00e9ment contenu dans `autobreadcrumbs_elements`_.\r\n\r\nTemplate tags\r\n*************\r\n\r\nPour pouvoir les utiliser il faut les importer dans votre templates via la librairie : ::\r\n\r\n  {% load autobreadcrumb %}\r\n\r\ncurrent_title_from_breadcrumbs\r\n  Retourne simplement le titre de la ressource en cours.\r\nautobreadcrumbs_tag\r\n  G\u00e9n\u00e8re le HTML complet du chemin d'acc\u00e8s \u00e0 partir du templates ``autobreadcrumbs_tag.html`` d\u00e9j\u00e0 fournit. Vous pouvez \r\n  le supplanter en cr\u00e9ant simplement le votre \u00e0 la racine de vos templates.\r\nautobreadcrumbs_links\r\n  G\u00e9n\u00e8re directement le HTML du chemin d'acc\u00e8s en utilisant ``settings.AUTOBREADCRUMBS_HTML_LINK`` comme cha\u00eene de \r\n  template (elle doit comporter les emplacements de variables nomm\u00e9s correspondant aux attributs disponible dans \r\n  ``BreadcrumbRessource``) et ``settings.AUTOBREADCRUMBS_HTML_SEPARATOR`` pour le s\u00e9parateur entre chaque miette.\r\ncurrentwalkthroughto\r\n  Renvoi le contenu donn\u00e9 entre les balises si la ressource courante passe par la ressource cibl\u00e9e \r\n  (par son urlname). Requiert en argument le nom d'url de la ressource cibl\u00e9e.\r\n      \r\n  Exemple : ::\r\n  \r\n      {% currentwalkthroughto 'index' %}Ma page courante passe par l'index{% endcurrentwalkthroughto %}\r\n  \r\n  Si le test \u00e9choue (aka la ressource ne passe pas par un chemin au nom d'url cibl\u00e9), \r\n  le contenu entre les balises n'est pas renvoy\u00e9 mais une chaine vide \u00e0 la place.\r\n", 
            "visible": true, 
            "template": "elastic_with_columns", 
            "published": "2012-03-01 23:46:14", 
            "lft": 1, 
            "order": 20, 
            "slug": "autobreadcrumbs"
        }
    }, 
    {
        "pk": 34, 
        "model": "sveedocuments.page", 
        "fields": {
            "rght": 2, 
            "level": 0, 
            "tree_id": 7, 
            "parent": null, 
            "title": "Sveetchies-mailings", 
            "author": 1, 
            "modified": "2012-03-03 18:01:08", 
            "created": "2012-03-03 18:01:08", 
            "content": "Introduction\r\n============\r\n\r\nSveetchies-mailings est un syst\u00e8me de gestion d'envois de mails permettant d'organiser l'envoi et la mise en \r\nforme de nombreux mails diff\u00e9rents dans des applications.\r\n\r\nLe syst\u00e8me utilise des templates modifiables dans l'administration et un historique optionnel des envois.\r\n\r\nInstallation\r\n============\r\n\r\nSettings\r\n********\r\n\r\nCe module est \u00e0 installer comme application d'un projet Django dans \r\n``settings.INSTALLED_APPS`` tel que :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    INSTALLED_APPS = (\r\n        ...\r\n        'Sveetchies.django.mailings',\r\n        ...\r\n    )\r\n\r\nAutodiscover\r\n************\r\n\r\nPuis de la m\u00eame mani\u00e8re que pour le *autodiscover* de l'administration Django (``django.contrib.admin``), \r\nil faut ins\u00e9rer le code suivant au d\u00e9but du fichier ``urls.py`` \u00e0 la base de votre projet \r\nDjango :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    from Sveetchies.django import mailings\r\n    mailings.autodiscover()\r\n\r\nSi vos applications comportent des scripts CLI (``$APP/management/commands/``) qui \r\nutilisent \"mailings\", il faudra y int\u00e9grer l'autodiscover pour que le registre \r\ny soit accessible.\r\n\r\nUtilisation\r\n===========\r\n\r\nTemplate de mail\r\n****************\r\n\r\nChaque template est une instance de ``Sveetchies.django.mailings.interface.BaseMailTemplate`` \r\ncontenu dans un fichier ``mails.py`` (par convention) dans le r\u00e9pertoire d'une application. Pour \r\nchaque template vous devez remplir quatres attributs :\r\n\r\n* **key** : Cl\u00e9 unique qui sert \u00e0 acc\u00e9der au template dans le registre des templates;\r\n* **label** : Titre affich\u00e9 dans l'administration;\r\n* **subject** : Sujet utilis\u00e9 pour le mail \u00e0 envoyer, utilise le syst\u00e8me de template de Django \r\n  avec le contexte du mail;\r\n* **body** : Corps du mail \u00e0 envoyer, utilise le syst\u00e8me de template de Django avec le contexte \r\n  du mail;\r\n\r\nEt optionnellement aussi, une m\u00e9thode ``get_available_variables()`` qui renvoit un dictionnaire \r\ncontenant une description de chaque variable que vous rendrez disponible dans le contexte du mail. \r\nC'est une m\u00e9thode d'aide uniquement utilis\u00e9e dans l'administration, elle ne g\u00eane pas le fonctionnement \r\ndu syst\u00e8me si absente mais elle est conseill\u00e9e.\r\n\r\nExemple :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    from Sveetchies.django import mailings\r\n    \r\n    class NomDeMaClassControleur(mailings.BaseMailTemplate):\r\n        key = \"mon-controleur\"\r\n        label = u\"Controleur de d\u00e9monstration\"\r\n        subject = \"D\u00e9monstration {{ dummy_title }}\"\r\n        body = \"Ceci est une d\u00e9monstration d'un template bidon avec une variable :\\n{{ dummy_content }}\\n.\"\r\n        \r\n        def get_available_variables(self):\r\n            return {\r\n                'dummy_title': u'Titre bidon pour le sujet du mail',\r\n                'dummy_content': u'Contenu bidon pour le corps du mail',\r\n            }\r\n\r\nInscription au registre\r\n***********************\r\n\r\nLes templates sont \u00e0 inscrire au registre dans un fichier ``mails.py`` d'un module \r\nd'application (inscrit dans ``settings.INSTALLED_APPS``) de votre webapp. Il est \r\nconseill\u00e9 de ranger les templates dans les modules d'applications qui les utilisent, \r\nmais il est aussi possible de tous les ranger dans un m\u00eame fichier.\r\n\r\nPour r\u00e9f\u00e9rencer un template il suffit d'utiliser la m\u00e9thode du registre :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    from Sveetchies.django import mailings\r\n    \r\n    ...\r\n        \r\n    mailings.site.register(NomDeMaClassControleur)\r\n\r\nLes fichiers ``mails.py`` sont automatiquement parcourus par le *autodiscover* \u00e0 la recherche \r\nd'inscription de templates. Si pendant cette proc\u00e9dure (en g\u00e9n\u00e9ral au d\u00e9marrage d'une instance de votre \r\nprojet) un template se pr\u00e9sente avec une cl\u00e9 d\u00e9j\u00e0 enregistr\u00e9e au registre, une exception \r\n``AlreadyRegistered`` sera lev\u00e9e.\r\n\r\nPour certains cas particuliers vous pouvez aussi inscrire des fichiers contenant vos templates dans \r\n``settings.MAILINGS_LOADS`` qui est un tuple contenant une liste de chemins Python vers\r\nles modules \u00e0 r\u00e9f\u00e9rencer dans le registre.\r\n\r\nPar exemple  :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    MAILINGS_LOADS = ('lots_of_mails',)\r\n\r\nLira le fichier ``lots_of_mails.py`` \u00e0 la racine de votre projet pour y trouver des templates \u00e0 \r\ninscrire. \r\n\r\nUtiliser un template\r\n********************\r\n\r\nUne fois fait, le contr\u00f4leur sera disponible depuis sa cl\u00e9 dans le registre de votre \r\nprojet. Il peut alors \u00eatre utilis\u00e9 depuis vos applications par exemple de cette \r\nfa\u00e7on :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    # Contenu de d\u00e9mo\r\n    context = {\r\n        'dummy': u'DUMMY VARIABLE IS DUMMY !',\r\n    }\r\n    recipient1 = 'recipient1@localhost'\r\n    recipient2 = 'recipient2@localhost'\r\n    from_email = 'sender@localhost'\r\n    \r\n    # Instancie le template en mode actif et passe son contexte\r\n    dummy = mailings.site.get_controler('mon-controleur', passive=True, context=context)\r\n    \r\n    # Envoi d'un mail unique pour tout les destinataires\r\n    dummy.send_single_mail([recipient1, recipient2], from_email)\r\n    \r\n    # Envoi d'un mail s\u00e9par\u00e9 pour chaque destinataire\r\n    dummy.send_separate_mail([recipient1, recipient2], from_email)\r\n\r\nNotez que le template est fait pour g\u00e9n\u00e9rer automatiquement le sujet et contenu du mail \r\n\u00e0 partir de son template et du contexte.\r\n\r\nDe base le contexte est identique \u00e0 tout les envois, c'est celui qui a \u00e9t\u00e9 sp\u00e9cifi\u00e9 \u00e0 \r\nl'instanciation du template. Pour formuler un contexte diff\u00e9rent pour chaque envoi il \r\nsuffit d'utiliser l'argument ``extra_context`` des m\u00e9thodes d'envois, le contenu de \r\ncontexte suppl\u00e9mentaire \u00e9crasera le contenu du contexte initial.\r\n\r\nContexte global\r\n***************\r\n\r\nIl est possible d'appliquer un contexte global qui s'appliquera \u00e0 tout les \r\ntemplates, par exemple :\r\n\r\n..  sourcecode:: python\r\n    :linenos:\r\n\r\n    from Sveetchies.django import mailings\r\n    \r\n    def set_global_mailings_context():\r\n        mailings.site.set_context(**{\r\n            'foo': \"bar\",\r\n        })\r\n\r\nRendra disponible la variable de contexte pour tout les templates de mails sans avoir \u00e0 la \r\nsp\u00e9cifier \u00e0 chacun. Ce contexte global peut cependant \u00eatre *\u00e9cras\u00e9* par les contextes sp\u00e9cifiques \r\ndonn\u00e9s aux templates lors de leur utilisation.\r\n\r\nLe plus simple pour un contexte global est de l'installer dans le ``urls.py`` de votre projet \u00e0 la \r\nsuite du *autodiscover* de mailings, de cette fa\u00e7on le contexte sera appliqu\u00e9 pour tous d\u00e8s la \r\npremi\u00e8re initialisation de votre projet.\r\n\r\nSynchronisation des donn\u00e9es initiales des contr\u00f4leurs\r\n*****************************************************\r\n\r\n\u00c0 chaque utilisation de syncdb, une synchronisation \"non-destructive\" des templates \r\nenregistr\u00e9s est effectu\u00e9e, les templates inscrits au registre mais manquants en base de donn\u00e9es sont \r\najout\u00e9s, mais ceux en trop ne sont pas supprim\u00e9s.\r\n", 
            "visible": true, 
            "template": "elastic_with_columns", 
            "published": "2012-03-02 01:35:46", 
            "lft": 1, 
            "order": 30, 
            "slug": "sveetchies-mailings"
        }
    }
]